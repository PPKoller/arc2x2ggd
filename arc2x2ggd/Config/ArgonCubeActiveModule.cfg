#=================================
# LAr Active Volume - Sides only
#=================================
[LArActive]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
material               = 'LAr'
AuxParams              = {"SensDet":"ArgonCube"}
dx                     = Q('153mm')
dy                     = Q('650mm')
dz                     = Q('320mm')


#=================================
# Light Collection
#=================================
[LightTile]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
material               = 'PVT'
dx                     = Q('151.5mm')
dy                     = Q('157.5mm')
dz                     = Q('2.5mm')

[LightUsPlane]
class                  = arc2x2ggd.Detector.SingleArrangePlane.SingleArrangePlaneBuilder
subbuilders            = ['LightTile']
dx                     = {LightTile:dx}
dy                     = 4*({LightTile:dy})+Q('3mm')
dz                     = {LightTile:dz}
material               = 'LAr'
NElements              = 4
TranspV                = [0,1,0]
InsideGap              = Q('2mm')
IndependentVolumes     = 'yes'

[LightDsPlane]
class                  = arc2x2ggd.Detector.SingleArrangePlane.SingleArrangePlaneBuilder
subbuilders            = ['LightTile']
dx                     = {LightTile:dx}
dy                     = 4*({LightTile:dy})+Q('3mm')
dz                     = {LightTile:dz}
material               = 'LAr'
NElements              = 4
TranspV                = [0,1,0]
InsideGap              = Q('2mm')
IndependentVolumes     = 'yes'


#=================================
# LAr Light
#=================================
[LArLightL]
class                  = arc2x2ggd.Detector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders            = ['LightUsPlane','LArActive','LightDsPlane']
TranspV                = [0,0,1]
material               = 'LAr'
dx                     = {LArActive:dx}
dy                     = {LArActive:dy}
dz                     = {LightUsPlane:dz}+{LArActive:dz}+{LightDsPlane:dz}
NElements              = 1

[LArLightR]
class                  = arc2x2ggd.Detector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders            = ['LightUsPlane','LArActive','LightDsPlane']
TranspV                = [0,0,1]
material               = 'LAr'
dx                     = {LArActive:dx}
dy                     = {LArActive:dy}
dz                     = {LightUsPlane:dz}+{LArActive:dz}+{LightDsPlane:dz}
NElements              = 1


#=================================
# Pixel Planes Anode
#=================================
[PixelTileL]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
material               = 'FR4'
dx                     = Q('5mm')
dy                     = Q('157.5mm')
dz                     = Q('157.5mm')

[PixelTileR]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
material               = 'FR4'
dx                     = Q('5mm')
dy                     = Q('157.5mm')
dz                     = Q('157.5mm')

[PixelPlaneL]
class                  = arc2x2ggd.Detector.DoubleArrangePlane.DoubleArrangePlaneBuilder
subbuilders            = ['PixelTileL']
material               = 'LAr'
dx                     = {PixelTileL:dx}
dy                     = 4*({PixelTileL:dy})+Q('3mm')
dz                     = 2*({PixelTileL:dz})+Q('1mm')
NElements1             = 4
TranspV1               = [0,1,0]
NElements2             = 2
TranspV2               = [0,0,1]
Rotation1              = ['0deg','0deg','0deg']
InsideGap1             = Q('2mm')
InsideGap2             = Q('2mm')
IndependentVolumes     = 'yes'
SubBDim                = [{PixelTileL:dx}, {PixelTileL:dy}, {PixelTileL:dz} ]

[PixelPlaneR]
class                  = arc2x2ggd.Detector.DoubleArrangePlane.DoubleArrangePlaneBuilder
subbuilders            = ['PixelTileR']
material               = 'LAr'
dx                     = {PixelTileR:dx}
dy                     = 4*({PixelTileR:dy})+Q('3mm')
dz                     = 2*({PixelTileR:dz})+Q('1mm')
NElements1             = 4
TranspV1               = [0,1,0]
NElements2             = 2
TranspV2               = [0,0,1]
Rotation1              = ['0deg','0deg','0deg']
InsideGap1             = Q('2mm')
InsideGap2             = Q('2mm')
IndependentVolumes     = 'yes'
SubBDim                = [{PixelTileR:dx}, {PixelTileR:dy}, {PixelTileR:dz} ]


#=================================
# Cathode
#=================================
[LArCathode]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
material               = 'FR4'
dx                     = Q('4mm')
dy                     = {LArLightL:dy}
dz                     = {LArLightL:dz}


#=================================
# LArSubModule: Pixel, Cathode, Active
#=================================
[LArSubModule]
class                  = arc2x2ggd.Detector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders            = ['PixelPlaneL','LArLightL','LArCathode','LArLightR','PixelPlaneR']
TranspV                = [1,0,0]
dx                     = 2*({LArLightL:dx})+2*({PixelPlaneL:dx})+{LArCathode:dx}
dy                     = {LArLightL:dy}
dz                     = {LArLightL:dz}
material               = 'LAr'
NElements              = 1


#=================================
# Resistive Field-Shaper Top
#=================================
[ResistiveFieldTop]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
subbuilders            = ['LArLightL']
material               = 'FR4'
dx                     = Q('285mm')
dy                     = Q('5mm')
dz                     = {LArLightL:dz}
#NElements              = 0

#=================================
# Resistive Field-Shaper Bottom
#=================================
[ResistiveFieldBot]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
subbuilders            = ['LArLightL']
material               = 'FR4'
dx                     = Q('285mm')
dy                     = Q('5mm')
dz                     = {LArLightL:dz}
#NElements              = 0


#=================================
# LArActiveMod: Field Cage Top and Bottom
#=================================
[LArActiveMod]
class                  = arc2x2ggd.Detector.ComplexSubDetector.ComplexSubDetectorBuilder
subbuilders            = ['ResistiveFieldBot','LArSubModule','ResistiveFieldTop']
TranspV                = [0,1,0]
dx                     = {LArSubModule:dx}+Q('0.5cm')
dy                     = {LArSubModule:dy}+2*({ResistiveFieldBot:dy})
dz                     = {LArSubModule:dz}
material               = 'LAr'
NElements              = 1


#=================================
# Argon Cube Wall
#=================================
[LArActiveModWall]
class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
subbuilders            = ['LArActiveMod']
material               = 'FR4'
dx                     = {LArActiveMod:dx}+Q('10mm')
dy                     = {LArActiveMod:dy}
dz                     = {LArActiveMod:dz}+Q('10mm')
NElements              = 0


#=================================
# ArgonCubeActive
#=================================
[ArgonCubeActive]
class                  = arc2x2ggd.Detector.DoubleArrangePlane.DoubleArrangePlaneBuilder
subbuilders            = ['LArActiveModWall']
material               = 'Air'
dx                     = 2*({LArActiveModWall:dx})
dy                     = {LArActiveModWall:dy}
dz                     = 2*({LArActiveModWall:dz})
NElements1             = 2
TranspV1               = [1,0,0]
NElements2             = 2
TranspV2               = [0,0,1]
Rotation1              = ['0deg','0deg','0deg']
InsideGap1             = Q('0cm')
InsideGap2             = Q('0cm')
IndependentVolumes     = 'yes'
SubBDim                = [{LArActiveModWall:dx}, {LArActiveModWall:dy}, {LArActiveModWall:dz} ]

#class                  = arc2x2ggd.Detector.SimpleSubDetector.SimpleSubDetectorBuilder
#material               = 'LAr'
#AuxParams              = {"SensDet":"ArgonCube"}
#dx                     = 4*({LArActiveModWall:dx})
#dy                     = {LArActiveModWall:dy}
#dz                     = 5*({LArActiveModWall:dz})
